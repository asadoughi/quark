# Copyright 2014 Openstack Foundation
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

from oslo.config import cfg

from neutron.common import config
from neutron.db import api as neutron_db_api

from quark.db import models

from sqlalchemy import and_, or_, func
from sqlalchemy.sql.expression import text

from collections import defaultdict
import json
import netaddr
import sys


def main():
    config.init(sys.argv[1:])
    if not cfg.CONF.config_file:
        sys.exit(_("ERROR: Unable to find configuration file via the default"
                   " search paths (~/.neutron/, ~/, /etc/neutron/, /etc/) and"
                   " the '--config-file' option!"))

    neutron_db_api.configure_db()
    neutron_db_api.register_models(base=models.BASEV2)
    session = neutron_db_api.get_session()
    with session.begin():
        for subnet in session.query(models.Subnet).all():
            policy = models.IPPolicy.get_ip_policy_cidrs(subnet)
            print subnet["tenant_id"], subnet["id"], subnet["_cidr"], policy


if __name__ == "__main__":
    main()
